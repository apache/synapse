<?xml version="1.0" encoding="UTF-8"?>
<project default="jar"
         xmlns:j="jelly:core"
         xmlns:u="jelly:util"
         xmlns:deploy="deploy"
         xmlns:ant="jelly:ant"
         xmlns:maven="jelly:maven"
         xmlns:define="jelly:define">

    <j:set var="dist.name" value="${pom.artifactId}-${pom.currentVersion}"/>
    <j:set var="dist.dir" value="target/dist"/>

    <goal name="setclasspath">
        <path id="test.classpath">
            <path refid="maven.dependency.classpath"/>
        </path>
    </goal>

    <!-- =============================================================================== -->
    <!-- =============================================================================== -->
    <!-- ==================== Creating Lightweight War ================================= -->
    <goal name="init">
        <ant:mkdir dir="target"/>
        <ant:mkdir dir="${dist.dir}"/>
        <ant:mkdir dir="target/lib"/>
        <uptodate property="jars.uptodate" targetfile="target/synapse.war">
            <srcfiles dir="src">
                <include name="**/*.java"/>
                <include name="**/*.xml"/>
                <exclude name="**/target/**"/>
            </srcfiles>
        </uptodate>
        <echo message="the files are up to date = ${jars.uptodate}"></echo>
    </goal>

    <goal name="jar">
        <attainGoal name="multiproject:install"/>
        <attainGoal name="jar:install"/>
    </goal>

    <postGoal name="test:compile">
        <ant:mkdir dir="${basedir}/target/lib"/>
        <deploy:copy-deps todir="${basedir}/target/lib"/>

        <echo message="----------------Creating synapse.mar----------------"/>
        <mkdir dir="target/modules/synapse/META-INF"/>
        <copy file="src/org/apache/synapse/axis2/META-INF/module.xml"
              tofile="target/modules/synapse/META-INF/module.xml"/>
        <jar jarfile="target/synapse.mar"
             basedir="target/modules/synapse">
            <include name="**"/>
        </jar>

        <echo message="----------------Creating First Dispatching aar----------------"/>
        <mkdir dir="target/services/synapse/META-INF"/>
        <copy file="synapse-test-resources/axis2/services/synapse/META-INF/services.xml"
              tofile="target/services/synapse/META-INF/services.xml"/>
        <jar jarfile="target/synapse.aar"
             basedir="target/services/synapse">
            <include name="**"/>
        </jar>
        <echo message="----------------Creating Empty Mediator aar----------------"/>
        <mkdir dir="target/services/emptymediator/META-INF"/>
        <copy file="synapse-test-resources/axis2/services/emptymediator/META-INF/services.xml"
              tofile="target/services/emptymediator/META-INF/services.xml"/>
        <jar jarfile="target/emptymediator.aar"
             basedir="target/services/emptymediator">
            <include name="**"/>
        </jar>
        <j:if test="${context.getVariable('maven.test.skip') != 'true'}">

            <echo message="----------------Creating NPE aar----------------"/>
            <mkdir dir="target/services/npe/META-INF"/>
            <mkdir dir="target/services/npe/org/apache/axis2/test"/>
            <copy file="test/org/apache/axis2/META-INF/services.xml"
                  tofile="target/services/npe/META-INF/services.xml"/>
            <copy file="target/test-classes/org/apache/axis2/test/Echo.class"
                  tofile="target/services/npe/org/apache/axis2/test/Echo.class"/>
            <jar jarfile="target/npe.aar"
                 basedir="target/services/npe">
                <include name="**"/>
            </jar>
             <echo message="----------------Creating test-mediator aar----------------"/>
            <mkdir dir="target/services/test-mediator/META-INF"/>
            <mkdir dir="target/services/test-mediator/org/apache/axis2/test"/>
            <copy file="test/org/apache/axis2/META-INF/service-mediator.xml"
                  tofile="target/services/test-mediator/META-INF/services.xml"/>
            <copy file="target/test-classes/org/apache/axis2/test/TestMediator.class"
                  tofile="target/services/test-mediator/org/apache/axis2/test/TestMediator.class"/>
            <jar jarfile="target/test-mediator.aar"
                 basedir="target/services/test-mediator">
                <include name="**"/>
            </jar>


            <echo message="-----------Creating Testing Repository - SendOn ----------"/>
            <mkdir dir="target/synapse-repository-sendon"/>
            <copy file="target/synapse.aar"
                  tofile="target/synapse-repository-sendon/services/synapse.aar"/>
            <copy file="target/npe.aar"
                  tofile="target/synapse-repository-sendon/services/npe.aar"/>
            <copy file="target/emptymediator.aar"
                  tofile="target/synapse-repository-sendon/services/emptymediator.aar"/>
            <mkdir dir="target/synapse-repository-sendon/modules"/>
            <copy file="target/synapse.mar"
                  tofile="target/synapse-repository-sendon/modules/synapse.mar"/>
            <copy file="synapse-test-resources/axis2/modules/addressing.mar"
                  tofile="target/synapse-repository-sendon/modules/addressing.mar"/>
            <copy file="synapse-test-resources/axis2/axis2.xml"
                  tofile="target/synapse-repository-sendon/axis2.xml"/>
            <copy file="test/rules/synapse-sendon.xml"
                  tofile="target/synapse-repository-sendon/synapse.xml"/>

            <echo message="-----------Creating Testing Repository - SendOnAxis2 ----------"/>
            <mkdir dir="target/synapse-repository-sendonAxis2"/>

            <!--<copy file="target/npe.aar"-->
                  <!--tofile="target/synapse-repository-sendonAxis2/services/npe.aar"/>-->
            <copy file="target/test-mediator.aar"
                  tofile="target/synapse-repository-sendonAxis2/services/test-mediator.aar"/>

            <copy file="synapse-test-resources/axis2/modules/addressing.mar"
                  tofile="target/synapse-repository-sendonAxis2/modules/addressing.mar"/>
            <copy file="synapse-test-resources/axis2/axis2.xml"
                  tofile="target/synapse-repository-sendonAxis2/axis2.xml"/>

            <ant:delete file="target/npe.aar"/>
            <ant:delete file="target/test-mediator.aar"/>

        </j:if>


        <echo message="-----------Creating Testing Repository - Genral----------"/>
        <mkdir dir="target/synapse-repository"/>
        <copy file="target/synapse.aar"
              tofile="target/synapse-repository/services/synapse.aar"/>
        <copy file="target/emptymediator.aar"
              tofile="target/synapse-repository/services/emptymediator.aar"/>
        <mkdir dir="target/synapse-repository/modules"/>
        <copy file="target/synapse.mar"
              tofile="target/synapse-repository/modules/synapse.mar"/>
        <copy file="synapse-test-resources/axis2/modules/addressing.mar"
              tofile="target/synapse-repository/modules/addressing.mar"/>
        <copy file="synapse-test-resources/axis2/axis2.xml"
              tofile="target/synapse-repository/axis2.xml"/>
        <copy file="repo/synapse.xml"
              tofile="target/synapse-repository/synapse.xml"/>

        <echo message="-----------Creating Testing Repository - Fault Handling ----------"/>
        <mkdir dir="target/synapse-repository-fault"/>
        <copy file="target/synapse.aar"
              tofile="target/synapse-repository-fault/services/synapse.aar"/>
        <copy file="target/emptymediator.aar"
              tofile="target/synapse-repository-fault/services/emptymediator.aar"/>
        <mkdir dir="target/synapse-repository-fault/modules"/>
        <copy file="target/synapse.mar"
              tofile="target/synapse-repository-fault/modules/synapse.mar"/>
        <copy file="synapse-test-resources/axis2/modules/addressing.mar"
              tofile="target/synapse-repository-fault/modules/addressing.mar"/>
        <copy file="synapse-test-resources/axis2/axis2.xml"
              tofile="target/synapse-repository-fault/axis2.xml"/>
        <copy file="test/rules/synapse-fault-return.xml"
              tofile="target/synapse-repository-fault/synapse.xml"/>

        <echo message="-----------Creating Testing Repository - Send ----------"/>
        <mkdir dir="target/synapse-repository-send"/>
        <copy file="target/synapse.aar"
              tofile="target/synapse-repository-send/services/synapse.aar"/>
        <copy file="target/emptymediator.aar"
              tofile="target/synapse-repository-send/services/emptymediator.aar"/>
        <mkdir dir="target/synapse-repository-send/modules"/>
        <copy file="target/synapse.mar"
              tofile="target/synapse-repository-send/modules/synapse.mar"/>
        <copy file="synapse-test-resources/axis2/modules/addressing.mar"
              tofile="target/synapse-repository-send/modules/addressing.mar"/>
        <copy file="synapse-test-resources/axis2/axis2.xml"
              tofile="target/synapse-repository-send/axis2.xml"/>
        <copy file="test/rules/synapse-send.xml"
              tofile="target/synapse-repository-send/synapse.xml"/>

        <!-- Deleteing helper stuff-->

        <ant:delete dir="target/modules"/>
        <ant:delete dir="target/services"/>
        <ant:delete file="target/emptymediator.aar"/>
        <ant:delete file="target/synapse.aar"/>
        <ant:delete file="target/synapse.mar"/>



    </postGoal>
    <!-- ================================================================ -->
    <!--- Reports -->
    <!-- ================================================================ -->
    <!-- Conditionally disable linkcheck based on a property. -->

    <postGoal name="xdoc:register-reports">

        <echo>Reports are disabled. Deregistering all the reports ....</echo>
        <attainGoal name="maven-linkcheck-plugin:deregister"/>
        <echo>linkcheck is disabled.</echo>
        <attainGoal name="maven-checkstyle-plugin:deregister"/>
        <echo>checkstyle is disabled.</echo>
        <attainGoal name="maven-changes-plugin:deregister"/>
        <echo>changes is disabled.</echo>
        <attainGoal name="maven-changelog-plugin:deregister"/>
        <echo>changelog is disabled.</echo>
        <attainGoal name="maven-license-plugin:deregister"/>
        <echo>license is disabled.</echo>
        <attainGoal name="maven-javadoc-plugin:deregister"/>
        <echo>javadoc is disabled.</echo>
        <attainGoal name="maven-junit-report-plugin:deregister"/>
        <echo>junit-report is disabled.</echo>
        <attainGoal name="maven-tasklist-plugin:deregister"/>
        <echo>tasklist is disabled.</echo>

    </postGoal>

    <!-- ================================================================ -->
    <!--- dist-bin -->
    <!-- ================================================================ -->

    <goal name="dist-bin" prereqs="war">
        <property name="bin.dist.dir"
                  value="target/dist-bin/${pom.artifactId}-${pom.currentVersion}-bin"/>
        <ant:mkdir dir="${bin.dist.dir}"/>
        <ant:mkdir dir="${dist.dir}"/>
        <ant:mkdir dir="${bin.dist.dir}/docs"/>
        <ant:mkdir dir="${bin.dist.dir}/bin"/>
        <ant:mkdir dir="${bin.dist.dir}/lib"/>
        <ant:mkdir dir="${bin.dist.dir}/synapse_repository"/>


        <ant:copy todir="${bin.dist.dir}/docs">
            <ant:fileset dir="xdocs">
                <ant:include name="**"/>
            </ant:fileset>
        </ant:copy>
        <ant:copy todir="${bin.dist.dir}/lib" flatten="true">
            <ant:fileset dir="target/lib">
                <ant:include name="*.jar"/>
                <ant:exclude name="**servlet**.jar"/>
                <ant:exclude name="ant*.jar"/>
                <ant:exclude name="commons-fileupload-*.jar"/>
            </ant:fileset>
            <ant:fileset dir="target">
                <ant:include
                        name="${pom.artifactId}-${pom.currentVersion}.jar"/>
            </ant:fileset>
        </ant:copy>
        <ant:copy file="scripts/synapse-lightweight.sh"
                  tofile="${bin.dist.dir}/bin/synapse-lightweight.sh"/>

        <ant:copy todir="${bin.dist.dir}/synapse_repository">
            <ant:fileset dir="target/synapse-repository-send/">
                <include name="**"/>
            </ant:fileset>
        </ant:copy>

        <ant:zip file="${dist.dir}/${dist.name}-bin.zip"
                 basedir="target/dist-bin"/>
        <ant:tar tarfile="target/${dist.name}-bin.tar"
                 basedir="target/dist-bin"/>
        <gzip src="target/${dist.name}-bin.tar"
              zipfile="${dist.dir}/${dist.name}-bin.tar.gz"/>
        <ant:delete dir="target/dist-bin"/>
        <ant:delete file="target/${dist.name}-bin.tar"/>
    </goal>
    <!-- ================================================================ -->
    <!--- dist-src -->
    <!-- ================================================================ -->

    <goal name="dist-src" prereqs="jar">
        <ant:mkdir dir="${dist.dir}"/>
        <ant:zip file="${dist.dir}/${dist.name}-src.zip">
            <ant:fileset dir=".">
                <ant:include name="**"/>
                <ant:exclude name="target"/>
                <ant:exclude name="**/.svn/**"/>
                <ant:exclude name="**/bin/**"/>
                <ant:exclude name="**/*.log"/>
                <ant:exclude name=".*"/>
                <ant:exclude name="**/*.license"/>
            </ant:fileset>
        </ant:zip>
        <ant:tar tarfile="target/${dist.name}-src.tar" longfile="gnu">
            <ant:tarfileset dir=".">
                <ant:include name="**"/>
                <ant:exclude name="**/target/**"/>
                <ant:exclude name="**/.svn/**"/>
                <ant:exclude name="**/bin/**"/>
                <ant:exclude name="**/*.log"/>
                <ant:exclude name=".*"/>
                <ant:exclude name="**/*.license"/>
            </ant:tarfileset>
        </ant:tar>
        <gzip src="target/${dist.name}-src.tar"
              zipfile="${dist.dir}/${dist.name}-src.tar.gz"/>
        <ant:delete file="target/${dist.name}-src.tar"/>
    </goal>

    <goal name="war" prereqs="init">
        <j:if test="${jars.uptodate != 'yes'}">
            <attainGoal name="jar"/>
        </j:if>
        <!-- jar the test classes -->
        <ant:war destfile="target/synapse.war" webxml="scripts/web.xml">
            <ant:lib dir="target/lib">
                <ant:include name="**"/>
                <ant:exclude name="**servlet**"/>
                <ant:exclude name="ant*.jar"/>
            </ant:lib>
            <ant:lib dir="target">
                <ant:include
                        name="${pom.artifactId}-${pom.currentVersion}.jar"/>
            </ant:lib>
            <ant:webinf dir="target/synapse-repository/"/>
        </ant:war>
    </goal>


</project>
